1. Comparación de tiempos entre BST y AVL
Inserción:

BST: 5 ms para 10,000 elementos
AVL: 868 ms para 10,000 elementos
El BST es aproximadamente 173 veces más rápido en inserción

Búsqueda:

BST: 1366/21/19 ticks (inicio/medio/final)
AVL: 3/20/17 ticks (inicio/medio/final)
El AVL es sustancialmente más rápido en búsqueda al inicio (455 veces), y ligeramente más rápido al medio y final

Eliminación:

Ambos árboles reportan 0 ms, por lo que no hay diferencia apreciable

Un árbol AVL es más rápido en operaciones de búsqueda porque se mantiene balanceado, lo que asegura que su altura sea logarítmica, permitiendo buscar en menos nodos. En cambio, un BST no balanceado puede volverse "delgado" y convertirse en una lista, lo que aumenta el tiempo de búsqueda.

Diferencias notadas: La mayor diferencia se ve con grandes volúmenes de datos, especialmente cuando el BST no está balanceado, lo que aumenta su altura.

Casos donde el BST fue más rápido: Si el BST ya estaba balanceado o los datos estaban en un orden que no causaba desbalance, las inserciones y eliminaciones podían ser más rápidas, ya que no se necesitaban rotaciones como en el AVL.
.